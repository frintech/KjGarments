@model MughapuWeb.DAL.ProductInsert
@{
    ViewBag.Title = "Add product";
}


@using (Html.BeginForm("Addproduct", "AdminProduct", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
  
    <div class="content aligncenter ">
            <div class="contant_contactus  grdOuter">
                <fieldset>
                    <legend>Add product</legend>

                    <div >
                       
                        <div class="dispBlock">Category </div> <div > @Html.DropDownListFor(model => model.Category_id ,new SelectList(ViewBag.Menus, "Value", "Text"),"- Select Category -") 
                                  @Html.ValidationMessageFor(m => m.Category_id)<br /><br /> </div> 

                      
                                                 <div class="form-group">
                                @Html.Label("Select sub category:", new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    <select id="sub_category"></select>
                                </div>
                            </div>
                           <div class="dispBlock">brands </div> <div > @Html.DropDownListFor(m => m.brand_id ,new SelectList(ViewBag.Brands, "Value", "Text"),"- Select brands -") 
                                  @Html.ValidationMessageFor(m => m.brand_id)<br /><br /> </div> 

                         <div class="name col-md-4">
                                  @Html.TextBoxFor(model => model.Product_Code,null, new { @placeholder="product Code" })
                                  @Html.ValidationMessageFor(model=>model.Product_Code)<br /><br />
                           </div>
                           <div class="name col-md-4">
                                  @Html.TextBoxFor(model => model.Product_Name,null, new { @placeholder="Product Name" })
                                  @Html.ValidationMessageFor(model=>model.Product_Name)<br /><br />
                           </div>
                          <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Product_Price,null, new { @placeholder="price" })
                                  @Html.ValidationMessageFor(m=>m.Product_Price)<br /><br />
                           </div>
                               <div class="dispBlock">Offers </div> <div > @Html.DropDownListFor(m => m.offer_id ,new SelectList(ViewBag.offers, "Value", "Text"),"- Select offers -") 
                                  @Html.ValidationMessageFor(m => m.offer_id)<br /><br /> </div> 
                          <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Product_Description,null, new { @placeholder="Product description" })
                                  @Html.ValidationMessageFor(m=>m.Product_Description)<br /><br />
                           </div>
                                               
                        <div class="dispBlock">   @Html.LabelFor(m => m.Imagepath)</div>
                                                 <div >
                              @Html.TextBoxFor(m => m.Imagepath, new { type = "file" })
                                @Html.ValidationMessageFor(m => m.Imagepath, string.Empty, new { id = "validationTxt" })
                                   @Html.CheckBoxFor(m => m.Homeflag, new { @checked = "false" });
                                    @Html.CheckBoxFor(m => m.Bannerflag, new { @checked = "false" });  
                                @Html.CheckBoxFor(m => m.Firstflag, new { @checked = "false" });                                   
                             <br /><br /><br />
                         </div>
                           @* <div class="dispBlock">  Banner Image</div>
                         <div >
                              @Html.TextBoxFor(m => m.horizontalImagepath, new { type = "file" })
                            @Html.ValidationMessageFor(m => m.horizontalImagepath, string.Empty, new { id = "validationTxt" })
                                @Html.CheckBoxFor(m => m.Homeflag, new { @checked = "false" });
                                    @Html.CheckBoxFor(m => m.Bannerflag, new { @checked = "false" });  
                                @Html.CheckBoxFor(m => m.Firstflag, new { @checked = "false" });  
                             <br /><br /><br />
                         </div>*@
                     @*   Product Description*@
                          <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Brand,null, new { @placeholder="Brand" })
                                  @Html.ValidationMessageFor(m=>m.Brand)<br /><br />
                           </div>
                          <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Model,null, new { @placeholder="Model" })
                                  @Html.ValidationMessageFor(m=>m.Model)<br /><br />
                           </div>
                          <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Movement,null, new { @placeholder="Movement" })
                                  @Html.ValidationMessageFor(m=>m.Movement)<br /><br />
                           </div>
                          <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Features,null, new { @placeholder="Features" })
                                  @Html.ValidationMessageFor(m=>m.Features)<br /><br />
                           </div>
                          <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Water_Resistance,null, new { @placeholder="Water Resistance" })
                                  @Html.ValidationMessageFor(m=>m.Water_Resistance)<br /><br />
                           </div>
                          <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Box,null, new { @placeholder="Box" })
                                  @Html.ValidationMessageFor(m=>m.Box)<br /><br />
                           </div>
                          <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Case_Material,null, new { @placeholder="Case Material" })
                                  @Html.ValidationMessageFor(m=>m.Case_Material)<br /><br />
                           </div>
                          <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Case_Back,null, new { @placeholder="Case Back" })
                                  @Html.ValidationMessageFor(m=>m.Case_Back)<br /><br />
                           </div>
                          <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Case_Size,null, new { @placeholder="Case Size" })
                                  @Html.ValidationMessageFor(m=>m.Case_Size)<br /><br />
                           </div>
                          <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Glass,null, new { @placeholder="Glass" })
                                  @Html.ValidationMessageFor(m=>m.Glass)<br /><br />
                           </div>
                          <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Dial_Colour,null, new { @placeholder="Dial_Colour" })
                                  @Html.ValidationMessageFor(m=>m.Dial_Colour)<br /><br />
                         </div>
                                <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Strap_Type,null, new { @placeholder="Strap_Type" })
                                  @Html.ValidationMessageFor(m=>m.Strap_Type)<br /><br />
                             </div>
                                <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Warranty,null, new { @placeholder="Warranty" })
                                  @Html.ValidationMessageFor(m=>m.Warranty)<br /><br />
                           </div>
                                <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Shipping,null, new { @placeholder="Shipping" })
                                  @Html.ValidationMessageFor(m=>m.Shipping)<br /><br />
                            </div>
                                <div class="name col-md-4">
                                  @Html.TextBoxFor(m => m.Payment_Method,null, new { @placeholder="Payment_Method" })
                                  @Html.ValidationMessageFor(m=>m.Payment_Method)<br /><br />
                           </div>
                              <br /><br /> 
                          <div class="send">
                               
                                                    <button type="submit">Submit</button>
                                                   
                                                        <button type="submit">Cancel</button>
                                                    
                                                        <button type="submit">RESET</button>
                                                    </div>

                           
                     </div>
                </fieldset>
            </div>
               
    </div>
    
    
      
}
 <script type="text/jscript">

     function randomString() {
         var chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";
         var string_length = Math.floor((Math.random() * 5) + 1);
         var randomstring = '';
         for (var i = 0; i < string_length; i++) {
             var rnum = Math.floor(Math.random() * chars.length);
             randomstring += chars.substring(rnum, rnum + 1);
         }
         $('#spnstring').html(randomstring);
     }

        //get file size


        //get file path from client system

        function getNameFromPath(strFilepath) {

            var objRE = new RegExp(/([^\/\\]+)$/);

            var strName = objRE.exec(strFilepath);

 

            if (strName == null) {

                return null;

            }

            else {

                return strName[0];

            }

        }

 

        $(function () {

            $("#ImagePhoto").change(function () {

                var file = getNameFromPath($(this).val());

                if (file != null) {

                    var extension = file.substr((file.lastIndexOf('.') + 1));
                   
                    switch (extension) {

                        case 'jpg':
                            flag = true;
                        case 'jpeg':
                            flag = true;
                        case 'JPG':
                            flag = true;
                        case 'png':
                            flag = true;
                        case 'gif':

                            flag = true;

                            break;

                        default:

                            flag = false;

                    }

                }

                if (flag == false) {

                    $("#validationTxt").text("You can upload only jpg,jpeg,png,gif extension file");

                    return false;

                }

                else {

                    var size =0;

                    if (size > 3) {

                        $("#validationTxt").text("You can upload file up to 1 MB");

                    }

                    else {

                        $("#validationTxt").text("");

                    }

                }

            });

        });

        $(document).ready(function () {
            $("#sub_category").prop("disabled", true);

            $("#Category_id").change(function () {

                if ($("#Category_id").val() != "") {
                    var menuid = $("#Category_id").val();
                    $.post('@Url.Action("LoadSubCategory", "AdminProduct")', { "menuid": menuid },
                        function (data) {                           
                            $("#sub_category").empty();                          
                            $.each(data, function (id, option) {
                                $("#sub_category").append($('<option></option>').val(option.Mnu_id).html(option.Mnu_Name));
                            });
                            $("#sub_category").prop("disabled", false);
                        });
                }
            })

            $("#brand_id").change(function () {

                if ($("#brand_id").val() != "") {
                   
                    var text = "";
                    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

                    for (var i = 0; i < 3; i++) {
                        text += possible.charAt(Math.floor(Math.random() * possible.length));
                    }

                    alert(text);
                  
                   // var menuid = $("#offer_id").val();
                    $("#Product_Code").val($("#brand_id option:selected").text().substring(0, 3).toUpperCase() + "-" + text.toUpperCase());
                    

                   
                }
                   })



        });
                  
     
       
</script>